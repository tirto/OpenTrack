#!/usr/bin/perl -w

use DBI;
use CGI qw/:standard :html3/;

###############################################################################

# Project:	Job Tracking System
# File:		mainmenu.cgi
# By:		Phuoc Diec
# Date:		Augus 2, 1999
# Description:
#   Generate menu bar for management module.

#   This menu contains listing requests, searching requests, editing personel
#   list, and exiting functions. Other functions such as deleting requests and 
#   viewing requests in detail are generated by listing.cgi scripts. 

#   For the searching function, users have following options:
#   search by request ID, search by date, search by a range of date, search by
#   names of the requesters, and by names of the persons who respond for the
#   requests.

#   For the listing function, users have following options:
#   List new requests, list inactive requests, list finished requests, and all.

#   The options for the listing and searching functions are displayed in the
#   option page when one of the function is selected. These option pages are
#   generated by JavaScripts included in this menu page. Results are displayed
#   in the display page.

#   Each of the option page for the searching function has a JavaScript that
#   does an error checking for that page before sending the searching option
#   to listing.cgi script which handles listing and searching functions.

###############################################################################

######### SET UP ENVIRONMENT VARIABLES TO THE DATABASE ##########
BEGIN
{
  $ENV{ORACLE_HOME} = "/projects/oracle";
  $ENV{ORACLE_SID} = "rdb1";
}

########## OPEN CONNECTION TO THE DATABASE ##########
open(FILE,"/home/httpd/.jobDBAccess");
$DBlogin = <FILE>;
$DBpassword = <FILE>;
# Let's get rid of that newline character
chop $DBlogin;
chop $DBpassword;

my $dbh = DBI->connect('DBI:Oracle:', $DBlogin, $DBpassword, {PrintError => 1,RaiseError =>1 })
    or die "connecting:  $DBI::errstr";


########## GET ASSIGN LIST FROM THE DATABASE ##########
$userid = $ENV{REMOTE_USER};
$sth = $dbh->prepare(qq{SELECT name
                        FROM assignList WHERE assigner = '$userid'
                        ORDER by name});
$sth->execute or die "Executing: $sth->errstr";
$list[0] = 'Responder';
$i = 1;
while (@row = $sth->fetchrow_array) {
  $list[$i++] = $row[0];
}

########## PRINT OUT THE REQUIRED HTTP Content-type:'text/html' ##########
print header();

########## PRINT OUT HTML HEADER AND OPEN <BODY> TAG ##########
#print start_html(-title=>'Hello World', -bgcolor=>'#ffffff');
print '<HTML><HEAD><TITLE>Hello World</TITLE>', "\n";

print '<script language="JavaScript">', "\n";

print << 'EOB';
<!--
function BlankPage() {
var optiondoc = top.frames[1].document 
optiondoc.open()
optiondoc.writeln("<HTML><HEAD>")
optiondoc.writeln("<TITLE>Edit Option Page</TITLE>")
optiondoc.writeln("</HEAD>")
optiondoc.writeln('<BODY BGCOLOR="#FFFFFF">')
optiondoc.writeln("</BODY></HTML>")
optiondoc.close()
return true
}
EOB

print << 'EOB';
function ShowSearchOptions() {
var optiondoc = top.frames[1].document
optiondoc.open()
optiondoc.writeln("<HTML><HEAD>")
optiondoc.writeln("<TITLE>Search Option Page</TITLE>")
if (document.forms[0].searchby.selectedIndex == 1) {
optiondoc.writeln("</HEAD>")
optiondoc.writeln('<BODY BGCOLOR="#FFFFFF">')
optiondoc.writeln('<CENTER><FORM METHOD="POST" ENCTYPE="application/x-www-form-urlencoded" ACTION="/cgi-bin/JobTrackSuper/detail.cgi" TARGET="display">')
optiondoc.writeln("Enter 14 digits request ID:")
optiondoc.writeln('<BR><INPUT TYPE="TEXT" NAME="rid" SIZE="14" MAXLENGTH="14 VALUE="">')
optiondoc.writeln('<BR><INPUT TYPE="SUBMIT" NAME="list" VALUE="Search" ONCLICK="return top.frames[0].ValidateId\(\)">')
optiondoc.writeln('<INPUT TYPE="HIDDEN" NAME="type" VALUE="1">')
optiondoc.writeln("</FORM></CENTER>")
}
else if (document.forms[0].searchby.selectedIndex == 2) {
optiondoc.writeln("</HEAD>")
optiondoc.writeln('<BODY BGCOLOR="#FFFFFF">')
optiondoc.writeln('<FORM METHOD="POST" ENCTYPE="application/x-www-form-urlencoded" ACTION="/cgi-bin/JobTrackSuper/listing.cgi" TARGET="display">')
optiondoc.writeln('date 1:')
optiondoc.writeln('<INPUT TYPE="TEXT" NAME="startdate" SIZE="10" MAXLENGTH="10" VALUE="MM-DD-YYYY">')
optiondoc.writeln("<BR><BR>date 2:")
optiondoc.writeln('<INPUT TYPE="TEXT" NAME="enddate" SIZE="10" MAXLENGTH="10" VALUE="MM-DD-YYYY">')
optiondoc.writeln("<BR><BR>Requester:")
optiondoc.writeln('<INPUT TYPE="TEXT" NAME="requester" SIZE="15" MAXLENGTH="25" VALUE="">')
optiondoc.writeln("<BR><SELECT NAME=responder>")
EOB

foreach $name(@list) {
  print "optiondoc.writeln('<OPTION>$name')", "\n";
}

print << 'EOB';
optiondoc.writeln("</SELECT>")
optiondoc.writeln("<BR><BR>Status:")
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="Unassigned"> New requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="Active"> Inactive requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="Finished"> Finished requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="All"> All requests')
optiondoc.writeln('<BR><CENTER><INPUT TYPE="SUBMIT" NAME="searchperiod" VALUE="Search" ONCLICK="return top.frames[0].ValidateCriteria()"><\/CENTER>')
optiondoc.writeln('<INPUT TYPE=HIDDEN NAME=type VALUE=0>')
optiondoc.writeln("</FORM>")
}
else if (document.forms[0].searchby.selectedIndex == 3) {
optiondoc.writeln("</HEAD>")
optiondoc.writeln('<BODY BGCOLOR="#FFFFFF">')
optiondoc.writeln("<FORM>")
optiondoc.writeln("Date:\(01-JAN-2000\)")
optiondoc.writeln('<INPUT TYPE="TEXT" NAME="date" SIZE="11" MAXLENGTH="11" VALUE="">')
optiondoc.writeln("<BR>Requester:")
optiondoc.writeln('<INPUT TYPE="TEXT" NAME="requester" SIZE="15" MAXLENGTH="25" VALUE="">')
optiondoc.writeln("<BR>Responder:")
optiondoc.writeln('<INPUT TYPE="TEXT" NAME="responder" SIZE="15" MAXLENGTH="25" VALUE="">')
optiondoc.writeln("<BR>Status:")
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="Unassigned" CHECKED> New requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="Active"> Inactive requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="Finished"> Finished requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="status" VALUE="All"> All requests')
optiondoc.writeln('<BR><CENTER><INPUT TYPE="SUBMIT" NAME="searchperiod" VALUE="Search"><\/CENTER>')
optiondoc.writeln("</FORM>")
}
else {
optiondoc.writeln("</HEAD>")
optiondoc.writeln('<BODY BGCOLOR="#FFFFFF">')
optiondoc.writeln("<P>Select search criteria</P>")
}
optiondoc.writeln("</BODY></HTML>")
optiondoc.close()
}
EOB

print << 'EOB';
function ShowEditOptions() {
top.frames[2].location="/cgi-bin/JobTrackSuper/editList.pl"
BlankPage(top.frames[1].document)
}
EOB

print << 'EOB';
function ShowListOptions() {
var optiondoc = top.frames[1].document
optiondoc.open()
optiondoc.writeln('<HTML><HEAD>')
optiondoc.writeln("<TITLE>List Option Page</TITLE>")
optiondoc.writeln("</HEAD>")
optiondoc.writeln('<BODY BGCOLOR="#FFFFFF">')
optiondoc.write("<B")
optiondoc.writeln("R>")
optiondoc.writeln('<FORM METHOD="POST" ENCTYPE="application/x-www-form-urlencoded" ACTION="/cgi-bin/JobTrackSuper/listing.cgi" TARGET="display">')
optiondoc.writeln("Select status:")
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="search_status" VALUE="Unassigned" CHECKED> New requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="search_status" VALUE="active"> Active requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="search_status" VALUE="finished"> Finished requests')
optiondoc.writeln('<BR><INPUT TYPE="RADIO" NAME="search_status" VALUE="all"> All requests')
optiondoc.writeln('<INPUT TYPE="HIDDEN" NAME="stridx" VALUE="1">')
optiondoc.writeln('<INPUT TYPE="HIDDEN" NAME="type" VALUE="2">')
optiondoc.writeln('<BR><CENTER><INPUT TYPE=SUBMIT NAME=list VALUE=List></CENTER>')
optiondoc.writeln("</FORM>")
optiondoc.writeln("</BODY></HTML>")
optiondoc.close()
}
EOB

print << "EOB";
function ValidateId() {
var id = top.frames[1].document.forms[0].rid.value
if (id.length != 14 ) {
alert("ID should have 14 digit long")
return false
}
var idReg = new RegExp("[^0-9]")
if (idReg.test(id)) {
alert("Request ID should have only 14 digits")
return false
}
else {
return true 
}
}
EOB

print << "EOB";
function ValidateDate(d) {
if (d.length != 10) {
alert("Length is not 10")
return false
}
if (d.charAt(2) != '-' || d.charAt(5) != '-') {
alert("Not valid format")
return false
}
var dReg = new RegExp("[\-0-9]")
if (dReg.test(d)) {
alert("There is character that is not digit")
return false
}
return true
}
EOB

print << "EOB";
function ValidateCriteria() {
doc = top.frames[1].document
var searchvalue = 0
for (i = 0; i < doc.forms[0].status.length; i++) {
if (doc.forms[0].status[i].checked=='1') {
searchvalue += 2
confirm(top.frames[1].document.forms[0].type.value)
}
}
if (doc.forms[0].startdate.value != 'MM-DD-YYYY' && doc.forms[0].enddate.value != 'MM-DD-YYYY') {
searchvalue *= 10
searchvalue += 4
confirm(top.frames[1].document.forms[0].type.value)
}
if (doc.forms[0].startdate.value != 'MM-DD-YYYY' || doc.forms[0].enddate.value != 'MM-DD-YYYY') {
searchvalue *= 10
searchvalue += 3
}
else {
alert("One of the dates is not valid")
}
}
EOB
print '//-->', "\n";
print '</script>', "\n";

print '</HEAD>';
print '<BODY bgcolor="#FFFFFF">';

########## GENERATE MENU ##########
print '<center>';
print startform();
print popup_menu(-name=>'searchby',
                 -value=>['Search by', 'ID',
                          'Period', 'Other'],
                 -onChange=>'ShowSearchOptions()');

print '<TABLE BORDER=0 CELLSPACING=4 WIDTH="100%">';
print Tr({-align=>'center'},
         td(button(-name=>"edit", -value=>"     Edit     ", -onClick=>'ShowEditOptions()')),
         td(button(-name=>"list", -value=>"     List     ", -onClick=>'ShowListOptions()'))),
      Tr({-align=>'center'},
         td({-colspan=>2}, button(-name=>"exit", -value=>"     Exit     ",
                                  -onClick=>'top.location="http://dolphin.engr.sjsu.edu/"')));
print '</TABLE>';

print endform();

print '</center>';
 
$dbh->disconnect;
print end_html;




